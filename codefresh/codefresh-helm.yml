version: '1.0'
stages:
- checkout
#- prepare
- build
#- unit_test
#- push
#- store
#- release
- deploy
#- e2e_test
#- approval
steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    stage: checkout
    repo: 'timlimhk/tim-ecp-flask'
    revision: 'master'
    git: github

#  prepare_env_vars:
#    title: 'Preparing environment variables...'
#    stage: prepare
#    image: codefreshio/ci-helpers
#    commands:
#      - source ./codefresh/set-env.sh
#      - cf_export git_commit_sha
#      - cf_export version
#      - cf_export service_port
#      - cf_export log_level
#      - env
#
  build_my_app:
    title: Building Python flask Docker Image
    type: build
    stage: build
    image_name: timlimhk/tim-ecp-flask
    working_directory: '.'
    tag: 'latest'
    dockerfile: Dockerfile
    registry: dk-repos
#    disable_push: true

#  my_unit_tests:
#    title: Running Unit tests
#    fail_fast: false
#    stage: unit_test
#    image: '${{build_my_app}}'
#    commands:
#      - pip install -e .
#      - pytest -k unit tests

#  push_to_my_registry:
#    stage: 'push'
#    fail_fast: false
#    type: push
#    title: Pushing to a registry
#    candidate: ${{build_my_app}}
##    tag: 'latest'
#    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
#    registry: dk-repos
#    image_name: timlimhk/tim-ecp-flask

# Below deployment has been verified with GKE
# But, causes K8s to crash soon after,  25 Nov 2020
# deploy_to_k8:
#   title: K8s Deploy
#   image: codefresh/cf-deploy-kubernetes:master
#   commands:
#     - /cf-deploy-kubernetes kubernetes/deployment.yaml
#     - /cf-deploy-kubernetes kubernetes/service.yaml
#   environment:
#     - KUBECONTEXT=devops-catalog@doc-cf-gke
#     - KUBERNETES_NAMESPACE=default
#     - PULL_SECRET=codefresh-generated-docker.io-dk-repos-default

# deploy_to_k8:
#   title: deploying to cluster
#   type: deploy
#   kind: kubernetes 
#   cluster:  devops-catalog@doc-cf-gke
#   namespace: default
#   service: tim-ecp-flask
#   file_path: ./kubernetes/deployment.yaml
#   candidate:
#     image: ${{build_my_app}}
#     registry: dk-repos
#   timeout: '300'




#  create_git_tag:
#    image: codefreshio/ci-helpers
#    fail_fast: false
#    stage: release
#    commands:
#      - git tag ${INSTALLER_VERSION}
#    when:
#      branch:
#        only: [master]

  store:
    title: Storing Helm chart
    type: helm
    fail_fast: false
    stage: deploy
    working_directory: .
    arguments:
      action: push
      chart_name: charts/tim-ecp-flask
      chart_repo_url: cm://h.cfcr.io/elitecom/default
      helm_version: 3.0.2
      kube_context: devops-catalog@doc-cf-gke
  deploy:
    type: helm
    stage: deploy
    working_directory: .
    arguments:
      action: install
      chart_name: charts/tim-ecp-flask
      release_name: tim-ecp-flask
      helm_version: 3.0.2
      kube_context: devops-catalog@doc-cf-gke
##      custom_values:
##        - 'buildID=${{CF_BUILD_ID}}'
##        - 'image_pullPolicy=Always'
##        - 'image_tag=multi-stage'
##        - 'replicaCount=1'
##        - 'image_pullSecret=codefresh-generated-r.cfcr.io-cfcr-default'
#
#  DeployMyChart:
#    type: helm
#    stage: deploy
#    working_directory: ./tim-ecp-flask
#    arguments:
#      action: install
#      chart_name: charts/tim-ecp-flask
#      release_name: tim-ecp-flask
#      helm_version: 3.0.2
#      kube_context: 'minikube'
#      custom_values:
#      - 'buildID=${{CF_BUILD_ID}}'
#      - 'image_pullPolicy=Always'
##      - 'repository=r.cfcr.io/kostis-codefresh/my-flask-app'
#      - 'repository=h.cfcr.io/elitecom/tim-ecp-flask'
#      - 'image_tag=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
#      - 'image_pullSecret=codefresh-generated-r.cfcr.io-cfcr-default'   
#  store:
#    title: Storing Helm Chart
#    fail_fast: false
#    type: helm
#    stage: store
#    working_directory: .
#    arguments:
#      action: push
#      chart_name: charts/tim-ecp-flask
#      kube_context: minikube
#      chart_repo_url: 'cm://h.cfcr.io/elitecom/default'
#      #kube_context: my-demo-k8s-cluster

#  deploy:
#    type: helm
#    stage: deploy
#    working_directory: .
#    arguments:
#      action: install
#      chart_name: charts/tim-ecp-flask
#      release_name: tim-ecp-flask
#      helm_version: 3.0.2
#      kube_context: minikube
##      custom_values:
##        - 'buildID=${{CF_BUILD_ID}}'
##        - 'image_pullPolicy=Always'
##        - 'image_tag=multi-stage'
##        - 'replicaCount=1'
##        - 'image_pullSecret=codefresh-generated-r.cfcr.io-cfcr-default'

#  my_e2e_tests:
#    title: Running E2E tests
#    fail_fast: false
#    stage: e2e_test
#    image: '${{build_my_app}}'
#    commands:
#      - pip install -e .
#      - pytest -k e2e /tests

#  approval:
#   image: alpine:3.8
#   title: deploy to production
#   stage: approval
#   commands:
#   - sleep 300
#   when:
#     steps:
#     - name: deployToProdNow
#       on:
#       - approved

