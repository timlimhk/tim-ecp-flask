version: '1.0'
stages:
- checkout
- prepare
- build
#- unit_test
- push
- store
- release
- deploy
#- e2e_test
#- approval

steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    stage: checkout
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    revision: "${{CF_BRANCH}}"
    git: github

  prepare_env_vars:
    title: 'Preparing environment variables...'
    stage: prepare
    image: codefreshio/ci-helpers
    commands:
      - source ./codefresh/set-env.sh
      - cf_export git_commit_sha
      - cf_export version
      - cf_export service_port
      - cf_export log_level
      - env

  build_my_app:
    title: Building Python flask Docker Image
    type: build
    stage: build
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    working_directory: '.'
    tag:  1.0.0
    dockerfile: Dockerfile
    disable_push: true
#
  push_to_my_registry:
    stage: 'push'
    fail_fast: false
    type: push
    title: Pushing to a registry
    candidate: ${{build_my_app}}
    tag:  1.0.0
    registry: dk-repos
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}

#  my_unit_tests:
#    title: Running Unit tests
#    fail_fast: false
#    stage: unit_test
#    image: '${{build_my_app}}'
#    commands:
#      - pip install -e .
#      - pytest -k unit tests


  store:
    title: Storing Helm chart
    type: helm
    fail_fast: false
    stage: store
    working_directory: ./${{CF_REPO_NAME}}
    arguments:
      action: push
      chart_name: charts/${{CF_REPO_NAME}}
      helm_version: 3.0.2
      kube_context: devops-catalog@doc-cf-gke
#     chart_repo_url: https://timlimhk.github.io/helm-chart/
# Pushed successfully to CF HELM repos only so far
      chart_repo_url: cm://h.cfcr.io/elitecom/default

# create_git_tag:
#   image: codefreshio/ci-helpers
#   fail_fast: false
#   stage: release
#   commands:
#     - git tag ${{CF_SHORT_REVISION}}
#   when:
#     branch:
#       only: [master]


#
#
#  my_e2e_tests:
#    title: Running E2E tests
#    fail_fast: false
#    stage: e2e_test
#    image: '${{build_my_app}}'
#    commands:
#      - pip install -e .
#      - pytest -k e2e /tests

#  approval:
#   image: alpine:3.8
#   title: deploy to production
#   stage: approval
#   commands:
#   - sleep 300
#   when:
#     steps:
#     - name: deployToProdNow
#       on:
#       - approved
#
# Below deployment has been verified with GKE
  deploy:
    type: helm
    stage: deploy
    working_directory: ./${{CF_REPO_NAME}}
    arguments:
      action: install
      chart_name: charts/${{CF_REPO_NAME}}
      release_name: ${{CF_REPO_NAME}}
      helm_version: 3.0.2
      kube_context: devops-catalog@doc-cf-gke
      custom_values:
        - 'env_git__commit__sha=${{CF_SHORT_REVISION}}'
        - 'image_pullPolicy=Always'
        - 'image_tag=1.0.0'
        - 'replicaCount=1'
        - 'image_pullSecret=codefresh-generated-r.cfcr.io-cfcr-default'
#    when:
#      branch:
#        only: [master]

# Below deployment has been verified with GKE
# But, causes K8s to crash soon after,  25 Nov 2020
# deploy_to_k8:
#   title: K8s Deploy
#   image: codefresh/cf-deploy-kubernetes:master
#   commands:
#     - /cf-deploy-kubernetes kubernetes/deployment.yaml
#     - /cf-deploy-kubernetes kubernetes/service.yaml
#   environment:
#     - KUBECONTEXT=devops-catalog@doc-cf-gke
#     - KUBERNETES_NAMESPACE=default
#     - PULL_SECRET=codefresh-generated-docker.io-dk-repos-default


